version: '2'

services:
# Nginx :0  easy way :80 :D 
    web:
        image: nginx:1.13.8
        container_name: work_nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/includes.d:/etc/nginx/includes.d # dir usado para includes files nginx config
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/ssl:/etc/nginx/ssl
            - /storage:/storage # local dir [projects] remember {find . -type f -exec chmod 544 {} \; && find . -type d -exec chmod 755 {} \;}
        networks:
            - network-back

# PHPs extends file: Ã© a referencia :D assim deixo tudo separado
    php-7:
      extends:
        file: php/php.yml
        service: php-7

    php-5.6:
      extends:
        file: php/php.yml
        service: php-5.6

# BASE DE DADOS MySQL # TODO talvez passar para um .yml separado

    # mysql-5.7:
    #    extends:
    #     file: mysql/mysql.yml
    #     service: mysql-5.7

    percona:
       extends:
        file: mysql/mysql.yml
        service: percona

# USAR extends para Tools ;D
    phpmyadmin:
      extends:
        file: tools/tools.yml
        service: phpmyadmin

    mailhog:
      extends:
        file: tools/tools.yml
        service: mailhog

    redis:
      extends:
        file: tools/tools.yml
        service: redis

#Using to test concepts 
    # elasticsearch:
    #     image: elasticsearch:latest
    #     restart: always
    #     container_name: work_elastic
    #     ports:
    #         - "9200:9200"
    #         - "9300:9300"
    #     networks:
    #         - network-back

    # mongo:
    #     image: mongo
    #     restart: always
    #     container_name: work_mongo
    #     ports:
    #         - "27017:27017"
    #     volumes:
    #         - ./mongo/data:/data/db
    #         - ./mongo/config:/data/configdb
    #     networks:
    #         - network-back

# Networks links internos para os services names ;)
networks:
    network-back:
        driver: bridge